#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
# Set fact to check if CSV already exist for this namespace
- name: "Check for existence of CSV: '{{ oc_product.domain }}-{{ oc_product.name }}-operator'"
  when: seaa_automation_strategy != "generate_yaml"
  kubernetes.core.k8s_info:
    api_key: "{{ ocp_cluster.auth_token }}"
    kind: ClusterServiceVersion
    namespace: "{{ project_namespace.name }}"
    api_version: operators.coreos.com/v1alpha1
    label_selectors:
      - "instance-name={{ broker_instance.name }}"
      - "operator-domain={{ oc_product.domain }}"
      - "operator-name={{ oc_product.name }}"
      - "operator-version={{ oc_product.oc_version }}"
  register: csv_info

- name: Reset flag for existing CSV
  ansible.builtin.set_fact:
    csv_exist: false

- name: Set flag for existing CSV
  ansible.builtin.set_fact:
    csv_exist: true
  when:
    - csv_info is defined and csv_info.resources is defined and csv_info.resources | length > 0
    - "'status' in csv_info.resources[0] and csv_info.resources[0].status.phase == 'Succeeded'"

- name: Debug Collection and endpoint before mapping
  when:
    - seaa_automation.debug | bool
  block:
    - name: Debug var endpoint
      ansible.builtin.debug:
        var: endpoint
    - name: Debug var subop_config
      ansible.builtin.debug:
        var: subop_config
    - name: Debug var oc_product
      ansible.builtin.debug:
        var: oc_product
    - name: Waiting for user response
      ansible.builtin.pause:
        prompt: Check product and endpoint variables before mapping collection, press enter to continue ...
      when:
        - seaa_automation.prompt_during_automation | bool

- name: Block to Map sub-operator for new csv deplyment - with yaml
  when: (not csv_exist and seaa_automation_strategy == "generate_deploy_yaml") or
        seaa_automation_strategy == "generate_yaml" or seaa_automation_strategy == "deploy_yaml"
  block:
    - name: Include task to generate yaml file
      when:
        - seaa_automation_strategy != "deploy_yaml"
      ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/generate_yaml.yml"
      vars:
        src: "{{ seaa_ansible_directory }}/yamls/operators/sub-operator-config.yaml"
        destination_file: "{{ oc_product.short_name }}-{{ oc_product.oc_version }}_soc.yaml"
        is_suboperator_config: true

    - name: Get timestamp from the system
      when:
        - seaa_automation_strategy != "deploy_yaml"
        - seaa_capture_deployment_wait_time | bool
      ansible.builtin.shell: "echo $(($(date +'%s * 1000 + %-N / 1000000')))"
      register: start_tstamp_ns
      no_log: "{{ not seaa_automation.debug }}"
      changed_when: start_tstamp_ns.rc != 0

    - name: "Map suboperator with Native YAML API '{{ oc_product.name }}.zpm.{{ oc_product.oc_version }}-suboperatorconfig' to '\
       {{ project_namespace.name }}' on '{{ ocp_cluster.hostname }}'"
      when:
        - seaa_automation_strategy != "generate_yaml"
        - not csv_exist
      kubernetes.core.k8s:
        state: present
        namespace: "{{ project_namespace.name }}"
        definition: "{{ lookup('template', seaa_ansible_directory~'/yamls/operators/sub-operator-config.yaml') | from_yaml }}"
      register: mapped_suboperator
      until: "mapped_suboperator.failed == false"
      failed_when: mapped_suboperator.failed == true
      retries: "{{ seaa_deploy_yaml_retries | int }}" # 5
      delay: "{{ seaa_deploy_yaml_delay | int }}" # 30

- name: Block to handle existing CSV
  when:
    - seaa_automation_strategy != "generate_yaml"
    - csv_exist
    - zoscb_csv_deploy_verified is defined and not zoscb_csv_deploy_verified
  block:
    - name: "Map suboperator with Native YAML API '{{ oc_product.name }}.zpm.{{ oc_product.oc_version }}-suboperatorconfig' to '\
        {{ project_namespace.name }}' on '{{ ocp_cluster.hostname }}'"
      kubernetes.core.k8s:
        state: present
        namespace: "{{ project_namespace.name }}"
        definition: "{{ lookup('template', seaa_ansible_directory~'/yamls/operators/sub-operator-config.yaml') | from_yaml }}"
      register: mapped_suboperator
      until:
        - "mapped_suboperator.failed == false"
        - "mapped_suboperator.changed == true"
      failed_when: mapped_suboperator.failed == true
      retries: "{{ seaa_deploy_yaml_retries | int }}" # 5
      delay: "{{ seaa_deploy_yaml_delay | int }}" # 30

    - name: Set flag for updated operator CSV
      ansible.builtin.set_fact:
        new_csv_deployed: true

    - name: "If CSV exist wait for sub-operator {{ oc_product.name }} to go back into 'Installing' phase to continue ..."
      kubernetes.core.k8s_info:
        api_key: "{{ ocp_cluster.auth_token }}"
        kind: ClusterServiceVersion
        namespace: "{{ project_namespace.name }}"
        api_version: operators.coreos.com/v1alpha1
        label_selectors:
          - "instance-name = {{ broker_instance.name }}"
          - "suboperatorconfig.name = {{ oc_product.name }}.{{ oc_product.domain }}.{{ oc_product.oc_version }}"
      register: updated_deploy_csv_subop
      until:
        - updated_deploy_csv_subop.resources is defined and updated_deploy_csv_subop.resources | length > 0
        - "'status' in updated_deploy_csv_subop.resources[0]"
        - updated_deploy_csv_subop.resources[0].status.phase == 'Installing'
      retries: "{{ seaa_deploy_retries / 2 | int }}" # 120/2
      delay: "{{ seaa_deploy_delay / 2 | int }}" # 10/2

    - name: "Ensure successful installation of the {{ oc_product.name }} suboperator before proceeding"
      when: seaa_automation_strategy != "generate_yaml"
      kubernetes.core.k8s_info:
        api_key: "{{ ocp_cluster.auth_token }}"
        kind: ClusterServiceVersion
        namespace: "{{ project_namespace.name }}"
        api_version: operators.coreos.com/v1alpha1
        label_selectors:
          - "instance-name = {{ broker_instance.name }}"
          - "suboperatorconfig.name = {{ oc_product.name }}.{{ oc_product.domain }}.{{ oc_product.oc_version }}"
      register: deploy_csv_subop
      until:
        - deploy_csv_subop.resources is defined and deploy_csv_subop.resources | length > 0
        - "'status' in deploy_csv_subop.resources[0]"
        - deploy_csv_subop.resources[0].status.phase == 'Succeeded' or
           (deploy_csv_subop.resources[0].status.phase == 'Failed' and
            deploy_csv_subop.resources[0].status.message != "install timeout" and
            deploy_csv_subop.resources[0].status.reason != "InstallCheckFailed" )
      failed_when: "'status' in deploy_csv_subop.resources[0] and
                    deploy_csv_subop.resources[0].status.phase != 'Succeeded'"
      retries: "{{ seaa_deploy_retries | int }}" # 120
      delay: "{{ seaa_deploy_delay | int }}" # 10

    # Block to capture wait time to add to deploy script
    - name: Capture Deploy Wait time
      when:
        - seaa_automation_strategy != "deploy_yaml"
        - seaa_capture_deployment_wait_time | bool and start_tstamp_ns is defined
      block:
        - name: Capture wait time and add to deploy script
          ansible.builtin.include_role:
            name: zos_dev_envs
            tasks_from: capture_deploy_time
          vars:
            resource_kind: SubOperatorConfig
            _script_command_comment: "Wait for '{{ oc_product.name }}.{{ oc_product.domain }}.{{ oc_product.oc_version }}' \
              'SubOperatorConfig' {{ deploy_type }}ment "
            _deployment_file: "{{ seaa_yaml_single_deployment_file }}"
            _deploy_name: "{{ oc_product.name }}.{{ oc_product.domain }}.{{ oc_product.oc_version }}"
            _deploy_file: "{{ oc_product.short_name }}-{{ oc_product.oc_version }}_soc.yaml"

- name: Prompt to manually check sub-operator
  when:
    - seaa_automation.debug | bool
  block:
    - name: Prompt to manually check if sub-operator 'zpm-{{ oc_product.name }}-operator' is installed and ready.
      ansible.builtin.pause:
        prompt: "Check to make sure '{{ oc_product.name }}' operator has installed, press enter to continue ..."
      when: seaa_automation.prompt_during_automation | bool
