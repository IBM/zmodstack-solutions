#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
# OPENSHIFT CLUSTER - TODO:DOC -  Inventory > Runtime Vars
ocp_cluster:
  name: "{{ current_ocphost }}"
  hostname: "{{ hostvars[current_ocphost].ansible_host }}" # "{{ lookup('vars', 'OCP_CLUSTER_HOSTNAME') }}"
  ipaddress: "{{ hostvars[current_ocphost].cluster_ip_address | default('', true) }}" # "{{ lookup('vars', 'OCP_CLUSTER_IP_ADDRESS') }}"
  port: "{{ hostvars[current_ocphost].ansible_port }}" # "{{ lookup('vars', 'OCP_CLUSTER_PORT') | int }}"
  auth_token: "{{ hostvars[current_ocphost].cluster_auth_token |
                  default(lookup('vars', 'openshift_auth_token', default=''), true) |
                  default(lookup('vars', 'cluster_auth_token', default=''), true) }}" # "{{ lookup('vars', 'OCP_CLUSTER_AUTH_TOKEN') }}"

# NAMESPACE (Project) - TODO:DOC -  Defaults if Null -> Inventory Vars -> Constants?
project_namespace:
  apiVersion: "{{ lookup('vars', 'project_api_version') }}"
  description: "{{ lookup('vars', 'project_description') }}"
  display_name: "{{ lookup('vars', 'project_displayname') }}"
  requester: "{{ lookup('vars', 'project_requesting_user') |
                 default(hostvars[current_ocphost].ansible_user, true) |
                 default(ansible_user, true) }}"
  name: "{{ this_project_name | default('', true) }}"

# PVC (PersistentVolumeClaim) - TODO:DOC -  Defaults if Null -> Inventory Vars -> Constants?
persistent_volume_claim:
  name: "{{ lookup('vars', 'pvc_name') }}"
  apiVersion: "{{ lookup('vars', 'pvc_api_version') }}"
  accessModes:
    - "{{ lookup('vars', 'pvc_access_mode') }}"
  storage: "{{ lookup('vars', 'pvc_storage') }}"
  volumeMode: "{{ lookup('vars', 'pvc_volume_mode') }}"
  storageClassName: "{{ hostvars[current_ocphost].pvc_storage_class_name |
   default(lookup('vars', 'pvc_storage_class_name'), true) }}"  # "{{ lookup('vars', 'pvc_storage_class_name') }}"

# OPERATOR GROUP (OperatorGroup) TODO:DOC -  Defaults and Constants
operator_group:
  name: "{{ lookup('vars', 'operator_group_name') }}"
  apiVersion: "{{ lookup('vars', 'operator_group_api_version') }}" # operators.coreos.com/v1

# Z CLOUD BROKER SUBSCRIPTION (Subscription) TODO:DOC -  Inventory Vars -> override Defaults
broker_subscription:
  name: "{{ hostvars[current_ocphost].broker_subscription_name |
   default(lookup('vars', 'broker_subscription_name'), true) }}" # "{{ lookup('vars', 'broker_subscription_name') }}"
  version: "{{ hostvars[current_ocphost].broker_subscription_version |
   default(lookup('vars', 'broker_subscription_version'), true) }}"
  apiVersion: "{{ hostvars[current_ocphost].broker_subscription_api_version |
   default(lookup('vars', 'broker_subscription_api_version'), true) }}"
  channel: "{{ hostvars[current_ocphost].broker_subscription_channel |
   default(lookup('vars', 'broker_subscription_channel'), true) }}"
  installPlanApproval: "{{ hostvars[current_ocphost].broker_subscription_install_plan_approval |
   default(lookup('vars', 'broker_subscription_install_plan_approval'), true) }}"
  source: "{{ hostvars[current_ocphost].broker_subscription_source |
   default(lookup('vars', 'broker_subscription_source'), true) }}"
  sourceNamespace: "{{ hostvars[current_ocphost].broker_subscription_source_namespace |
   default(lookup('vars', 'broker_subscription_source_namespace'), true) }}"

# Z CLOUD BROKER INSTANCE (ZosCloudBroker) Default (with local defaults and storageClassName - Inventory Vars -> override Defaults
broker_instance:
  managed: "ibm-zos-cloud-broker"
  name: "{{ lookup('vars', 'broker_instance_name') }}"
  kind: "{{ lookup('vars', 'broker_instance_kind') }}"
  apiVersion: "{{ lookup('vars', 'broker_instance_api_version') }}"
  license:
    accept: "{{ lookup('vars', 'broker_instance_license_accept') | bool }}"
  loglevel: "{{ lookup('vars', 'broker_instance_log_level') }}"
  multiNamespace: "{{ lookup('vars', 'broker_instance_multi_namespace', default=false) | bool }}"
  resources:
    limits:
      # cpu: "{{ lookup('vars', 'broker_instance_resources_cpu_limit') | default('200m') }}"
      memory: "{{ lookup('vars', 'broker_instance_resources_memory_limit') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_instance_resources_ephemeral_stg_limit') | default('500Mi') }}"
    requests:
      cpu: "{{ lookup('vars', 'broker_instance_resource_cpu_request') | default('10m') }}"
      memory: "{{ lookup('vars', 'broker_instance_resource_memory_request') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_instance_resource_ephemeral_stg_request') | default('500Mi') }}"
  storage:
    configure: "{{ lookup('vars', 'broker_instance_storage_configure') | bool }}"
    enabled: "{{ lookup('vars', 'broker_instance_storage_enabled') | bool }}"
    size: "{{ lookup('vars', 'pvc_storage') }}"
    storageClassName: "{{ hostvars[current_ocphost].pvc_storage_class_name |
     default(lookup('vars', 'pvc_storage_class_name'), true) }}" # "{{ lookup('vars', 'pvc_storage_class_name') }}"
    volumeMode: "{{ lookup('vars', 'pvc_volume_mode') }}"
    accessModes: "{{ lookup('vars', 'pvc_access_mode') }}"
    accessMode: "{{ lookup('vars', 'pvc_access_mode') }}"
    pvc: "{{ lookup('vars', 'pvc_name') }}"
  catalogResources:
    limits:
      memory: "{{ lookup('vars', 'broker_catalog_resources_memory_limit') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_catalog_resources_ephemeral_stg_limit') | default('500Mi') }}"
    requests:
      cpu: "{{ lookup('vars', 'broker_catalog_resources_cpu_request') | default('10m') }}"
      memory: "{{ lookup('vars', 'broker_catalog_resources_memory_request') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_catalog_resources_ephemeral_stg_request') | default('500Mi') }}"
  uiResources:
    limits:
      memory: "{{ lookup('vars', 'broker_ui_resources_memory_limit') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_ui_resources_ephemeral_stg_limit') | default('500Mi') }}"
    requests:
      cpu: "{{ lookup('vars', 'broker_ui_resources_cpu_request') | default('10m') }}"
      memory: "{{ lookup('vars', 'broker_ui_resources_memory_request') | default('32Mi') }}"
      ephemeralStorage: "{{ lookup('vars', 'broker_ui_resources_ephemeral_stg_request') | default('500Mi') }}"

catalog_source:
  name: "{{ hostvars[current_ocphost].broker_catalog_name |
    default(lookup('vars', 'broker_catalog_name'), true) }}"
  display_name: "{{ hostvars[current_ocphost].broker_catalog_display_name |
    default(lookup('vars', 'broker_catalog_display_name'), true) }}"
  image: "{{ hostvars[current_ocphost].broker_catalog_image |
    default(lookup('vars', 'broker_catalog_image'), true) }}"
