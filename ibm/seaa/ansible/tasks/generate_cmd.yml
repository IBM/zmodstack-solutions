#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
- name: Include initialization task for generating files
  ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/gen_init.yml"

- name: Set generate YAML output directories and variables
  ansible.builtin.set_fact:
    command_to_execute: "{{ command_to_execute }}"
    command_to_add: "{{ script_command }}"
    command_args: "{{ script_command_string }}"
    script_file_name: "_{{ seaa_deploy_strategy }}.sh" # on undeploy - _undeploy.sh
    script_file_location: "{{ _seaa_yaml_output_dir }}"
    line_to_append: "{{ script_command }} {{ script_command_string }}"
    _script_command_comment: "{{ script_command_comment }}"
    deploy_type: "{{ seaa_deploy_strategy }}"
    deploy_src_file: "deploy_script_template.j2"
    readme_src_file: "deploy_readme_template.md"
    readme_file_name: "{{ 'README.md' if seaa_deploy_strategy == 'deploy' else 'READMEU.md' }}" # "README"
    _timelapse: "{{ timelapse | default(0.0) }}"
    nolog: "{{ not seaa_track_generated_yamls | bool }}"
    _copy_binary: false
    _secret_type: "{{ secret_type | default('sshkey') }}"

- name: Check for generation of YAML file '{{ yaml_file }}' for '{{ project_namespace.name }}' on '{{ ocp_cluster.hostname }}'"
  ansible.builtin.pause:
    prompt: "Generation CMD for Native YAML API, press enter to continue ...:"
  when:
    - seaa_automation.prompt_during_automation | bool
    - seaa_track_generated_yamls | bool

- name: Set boolean for command with secret
  when:
    - command_secret is defined
    - command_secret is not none and command_secret != ""
  ansible.builtin.set_fact:
    command_has_secret: true

- name: Copy Encryption COMMAND to YAML output Directory and Update Script and README files
  when:
    - command_to_execute == "zoscb-encrypt"
  block:

    - name: Add Passphrase prompt flag if exist for secret
      when:
        - _secret_type == "sshkey"
        - command_has_secret is defined and command_has_secret
      ansible.builtin.set_fact:
        line_to_append: "{{ line_to_append }} --prompt_for_passphrase"

    # - name: Set stats of CMD file.
    #   ansible.builtin.stat:
    #     path: "{{ _seaa_bin_output_dir }}/{{ command_to_execute }}"
    #   register: command_file
    #   no_log: "{{ nolog }}"

    # - name: Copy Command source
    #   when:
    #     - not command_file.stat.exists
    #     - _copy_binary
    #   block:

    #     - name: Get ansible controller OS
    #       when: controller_os is not defined
    #       block:
    #         - name: Filter and return only selected facts
    #           ansible.builtin.setup:
    #             filter:
    #               - 'ansible_distribution'

    #         - name: Set Controller OS
    #           ansible.builtin.set_fact:
    #             controller_os: "{{ ansible_facts['distribution'] }}"

    #     - name: Make sure parent bin directory for CMD  exists
    #       ansible.builtin.file:
    #         path: "{{ _seaa_bin_output_dir }}"
    #         state: directory
    #         mode: '0755'

    #     - name: Copy MacOSX CMD file
    #       when: controller_os == "MacOSX"
    #       ansible.builtin.copy:
    #         src: "{{ seaa_ansible_directory }}/../../binaries/darwin-amd64-zoscb-encrypt"
    #         dest: "{{ _seaa_bin_output_dir }}/{{ command_to_execute }}"
    #         mode: '0755'
    #       register: copied_command_file

    #     - name: Copy Linux CMD file
    #       when: controller_os != "MacOSX"
    #       ansible.builtin.copy:
    #         src: "{{ seaa_ansible_directory }}/../../binaries/linux-amd64-zoscb-encrypt"
    #         dest: "{{ _seaa_bin_output_dir }}/{{ command_to_execute }}"
    #         mode: '0755'
    #       register: copied_command_file

    #     - name: Wait until the CMD file is present before continuing
    #       ansible.builtin.wait_for:
    #         path: "{{ _seaa_bin_output_dir }}/{{ command_to_execute }}"
    #         timeout: 300

    - name: Include task to generate script file for Encrypt CMD
      ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/_generate_script.yml"
      vars:
        src: "{{ seaa_ansible_directory }}/yamls/{{ deploy_src_file }}"
        dest: "{{ script_file_location }}/{{ script_file_name }}"
        add_command_to_script: true
        add_command_comment: "{{ deploy_type | capitalize }} {{ _script_command_comment }}"
        add_line: "{{ line_to_append }}"

    - name: Include task to generate README file for Encrypt CMD
      ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/_generate_readme.yml"
      vars:
        src: "{{ seaa_ansible_directory }}/yamls/{{ readme_src_file }}"
        dest: "{{ script_file_location }}/{{ readme_file_name }}"
        add_command_to_readme: true
        deploy_name: "{{ _script_command_comment | trim }}" # "{{ deploy_name }}"

- name: Add Wait CMD to Script and README files
  when:
    - command_to_execute == "sleep"
    - _timelapse | float > 0.0
  block:

    - name: Include task to generate script file for Sleep CMD
      ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/_generate_script.yml"
      vars:
        src: "{{ seaa_ansible_directory }}/yamls/{{ deploy_src_file }}"
        dest: "{{ script_file_location }}/{{ script_file_name }}"
        add_command_to_script: true
        add_command_comment: "{{ _script_command_comment }}"
        add_line: "{{ line_to_append }}"

    - name: Include task to generate README file for Sleep CMD
      when: seaa_capture_deployment_wait_time | bool
      ansible.builtin.include_tasks: "{{ seaa_ansible_directory }}/tasks/_generate_readme.yml"
      vars:
        src: "{{ seaa_ansible_directory }}/yamls/{{ readme_src_file }}"
        dest: "{{ script_file_location }}/{{ readme_file_name }}"
        add_command_to_readme: true
        deploy_name: "{{ _script_command_comment | trim }}" # "{{ deploy_name }}"
        append_to_previous_step: true
        timelapse: "{{ _timelapse }}"
