#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#


# Smart Deploy Broker
- name: Smart Deploy Instance of z/OS Cloud Broker
  when:
    - seaa_deploy_objective != 'zpm'
    - seaa_deploy_role == "admin"
    - (seaa_zoscb_smart_deploy | bool and not zoscb_deployed) # and seaa_automation_strategy != "generate_yaml" # or seaa_deploy_objective == 'zoscb'
  tags:
    - always
  block:
    # Broker block for smart deploy
    - name: Smart Deploy Broker
      when: seaa_zoscb_smart_deploy | bool
      block:

        # Verify Cloud Broker
        - name: Include info task for broker
          ansible.builtin.include_tasks: "verify/zoscb.yml"
          when:
            - seaa_automation_strategy != "generate_yaml"
            # - zoscb_deploy_verified is undefined or not zoscb_deploy_verified
          vars:
            info_only: true

        # Set zoscb deployed fact
        - name: Set zoscb_api_deployed true
          ansible.builtin.set_fact:
            has_broker_info: true
          when:
            - broker_instance_info_only is defined
            - broker_instance_info_only | type_debug != "NoneType"
            - broker_instance_info_only | length > 0

        # Set zoscb deployed fact
        - name: Set zoscb_api_deployed true
          ansible.builtin.set_fact:
            zoscb_api_deployed: true
          when:
            - has_broker_info is defined and has_broker_info
            - broker_instance_info_only | json_query('api_found') is not none
            # - broker_instance_info_only.api_found is defined

        # Verify Endpoint is deployed
        - name: Set zoscb_deploy_verified if it exist true
          ansible.builtin.set_fact:
            zoscb_deploy_verified: true
          when:
            - zoscb_api_deployed is defined and zoscb_api_deployed
            # Broker instance
            - broker_instance_info_only is defined and broker_instance_info_only.api_found
            - broker_instance_info_only.resources is defined and broker_instance_info_only.resources | length > 0
            - broker_instance_info_only.resources[0].status is defined and broker_instance_info_only.resources[0].status.licenseacceptance == "Accepted"
            - broker_instance_info_only.resources[0].status.phase == "Successful"
            # Subscription Info
            - broker_subscription_info_only.resources[0].status.installedCSV == broker_subscription.name~'.v'~broker_subscription.version

        # Verify CSV instance exist
        - name: Set zoscb_csv_deploy_verified if it exist true
          ansible.builtin.set_fact:
            zoscb_csv_deploy_verified: true
          when:
            - zoscb_deploy_verified is defined and zoscb_deploy_verified
            # CSV instance
            # - operator_info_only.resources is defined and operator_info_only.resources | length > 0
            - operator_info_only | json_query('resources') is not none
            - operator_info_only.resources | length > 0
            - operator_info_only.resources[0].metadata.creationTimestamp != ""
            - operator_info_only.resources[0].status.phase == 'Succeeded'
            - operator_info_only.resources[0].status.reason == 'InstallSucceeded'

        - name: Set flag  to check if z/OS endpoint not found
          ansible.builtin.set_fact:
            zosendpoint_not_found: false

        # Deploy if ENDPOINT doesn't exist Verify ENDPOINT
        - name: Verify all endpoints exist
          when:
            - zoscb_csv_deploy_verified is defined and zoscb_csv_deploy_verified
            - seaa_deploy_zosendpoints | bool
          block:

            # Iterate over endpoints to Verify if endpoints exist
            - name: Include task to verify zosendpoints
              ansible.builtin.include_tasks: "{{ ocp_task_dir }}/verify/endpoint.yml"
              when:
                - hostvars[current_zosendpoint]._is_active
                - not zosendpoint_not_found # short circuit endpoint verification
              vars:
                info_only: true
                endpoints: "{{ groups['zosendpoints'] }}"
              loop: "{{ endpoints }}"
              loop_control:
                loop_var: current_zosendpoint

        # Check if one of the Endpoints is are not deployed
        - name: Set zoscb_deploy_verified false if not all endpoints are available
          ansible.builtin.set_fact:
            zoscb_csv_deploy_verified: false
          when:
            - seaa_deploy_zosendpoints | bool
            - zosendpoint_not_found # or endpoint_info_only.resources | length == 0

      always:
        - name: Reset Broker info facts
          ansible.builtin.set_fact:
            has_broker_info: false
            broker_instance_info_only: ''
            operator_info_only: ''
            zosendpoint_not_found: false
            endpoint_info_only: ''

    # Deploy z/OS Cloud Broker if it is not verified or not smart deploy
    - name: Deploy z/OS Cloud Broker if it is not verified or not smart deploy
      ansible.builtin.include_tasks: "deploy/zoscb.yml"
      when:
        - seaa_deploy_strategy == "deploy"
        - (zoscb_csv_deploy_verified is undefined) or
          (not zoscb_csv_deploy_verified)

    # UnDeploy z/OS Cloud Broker verified deployed
    - name: UnDeploy z/OS Cloud Broker verified deployed
      ansible.builtin.include_tasks: "undeploy/zoscb.yml"
      when:
        - seaa_deploy_strategy == "undeploy"
        - (zoscb_csv_deploy_verified is defined and zoscb_csv_deploy_verified) or
          (seaa_automation_strategy == "generate_yaml")

    # Update cache with new namespace for broker
    - name: Update cache with new namespace for broker
      ansible.builtin.set_fact:
        ocp_cluster_cache: "{{ ocp_cluster_cache | update_seaa_automation_cache(current_ocphost, this_project_name, 'zoscb') }}"
      no_log: "{{ seaa_security_secure_log | default(true) | bool }}"
      when: ocp_cluster_cache is defined and ocp_cluster_cache != None

    # Show broker is deployed to namespace and added to cache
    - name: Debug cache for updated broker in namespace
      when:
        - seaa_automation.debug | bool
      block:
        - name: Debug var ocp_cluster_cache
          ansible.builtin.debug:
            var: ocp_cluster_cache
          no_log: "{{ seaa_security_secure_log | default(true) | bool }}"

        - name: Waiting for user response
          ansible.builtin.pause:
            prompt: Namespace '{{ this_project_name }}' added to zoscb deployed list on '{{ current_ocphost }}', press enter to continue ...
          when: seaa_automation.prompt_during_automation | bool
  always:
    - name: Reset zoscb_deploy_verified and query info facts
      ansible.builtin.set_fact:
        zoscb_csv_deploy_verified: false
        zoscb_deploy_verified: false
        zoscb_api_deployed: false

    # Set flag for ZOSCB being deployed to namespace
    - name: Set flag for ZOSCB being deployed to namespace
      when:
        - seaa_deploy_strategy == "deploy"
      ansible.builtin.set_fact:
        zoscb_deployed: "{{ seaa_zoscb_smart_deploy | bool }}"

    # Set flag for ZPM being deployed to namespace
    - name: Set flag for ZPM being deployed to namespace
      when:
        - seaa_deploy_strategy == "undeploy"
      ansible.builtin.set_fact:
        zoscb_deployed: "{{ not seaa_zoscb_smart_deploy | bool }}"
