#jinja2: lstrip_blocks: True
#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
kind: "{{ broker_instance.kind }}"
apiVersion: "{{ broker_instance.apiVersion }}"
metadata:
  name: "{{ broker_instance.name }}"
spec:
  license:
{% if broker_instance.license.accept == true %}
    accept: true
{% else %}
    accept: false
{% endif %}
{% if broker_instance.multiNamespace is defined and broker_instance.multiNamespace == true %}
  multiNamespace: true
{% else %}
  multiNamespace: false
{% endif %}
  logLevel: "{{ broker_instance.loglevel }}"
  {% if set_broker_catalog_resources is defined and set_broker_catalog_resources == true %}
  catalogResources:
      limits:
        memory: "{{ broker_instance.catalogResources.limits.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.catalogResources.limits.ephemeralStorage }}"
      requests:
        cpu: "{{ broker_instance.catalogResources.requests.cpu }}"  #"10m"
        memory: "{{ broker_instance.catalogResources.requests.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.catalogResources.requests.ephemeralStorage }}"
  {% else %}
  catalogResources: {} # {{ broker_instance.catalogResources | default({}) }}
  {% endif %}
  {% if set_broker_ui_resources is defined and set_broker_ui_resources == true %}
  uiResources:
      limits:
        memory: "{{ broker_instance.uiResources.limits.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.uiResources.limits.ephemeralStorage }}"
      requests:
        cpu: "{{ broker_instance.uiResources.requests.cpu }}"  #"10m"
        memory: "{{ broker_instance.uiResources.requests.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.uiResources.requests.ephemeralStorage }}"
  {% else %}
  uiResources: {} # {{ broker_instance.uiResources | default({}) }}
  {% endif %}
  {% if set_broker_manager_resources is defined and set_broker_manager_resources == true %}
  managerResources:
      limits:
        memory: "{{ broker_instance.resources.limits.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.resources.limits.ephemeralStorage }}"
      requests:
        cpu: "{{ broker_instance.resources.requests.cpu }}"  #"10m"
        memory: "{{ broker_instance.resources.requests.memory }}" #"32Mi"
        ephemeral-storage: "{{ broker_instance.resources.requests.ephemeralStorage }}"
  {% else %}
  managerResources: {}
  {% endif %}
  storage:
{% if broker_instance.storage.configure == true %}
    configure: true
{% else %}
    configure: false
{% endif %}
{% if broker_instance.storage.enabled == true %}
    enabled: true
{% else %}
    enabled: false
{% endif %}
    pvc: "{{ broker_instance.storage.pvc }}"
    size: "{{ broker_instance.storage.size }}"
    storageClassName: "{{ broker_instance.storage.storageClassName }}"
    volumeMode: "{{ broker_instance.storage.volumeMode }}"
    accessModes: "{{ broker_instance.storage.accessMode }}"
  galaxyConfig:
  {% if broker_instance.galaxyConfig.import_mode == 'airgap' %}
    enabled: false
  {% else %}
    enabled: true
  {% endif %}
    galaxyURL: "{{ broker_instance.galaxyConfig.galaxyURL }}" #'https://galaxy.ansible.com'
