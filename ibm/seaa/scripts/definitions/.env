#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

# The below are predefind environment variables for running admin scripts
# with default settings
# See below complete list of parameters for 'script_definition'
#   script_name - Name of the script to be transfered to zos endpoint
#   script_source_dir - Directory location of the script source code, default(/solutions-enablement/scenarios/scripts/admin)
#   script_args - arguments to pass to the script in running via ansible playbook
#   script_destination_dir - directory on zos endpoint to copy script into, default(tmp/scripts)
#   script_run - Flag to determine if script should run via ansible playbook, default(true)
#   scrit_clean - Flag to determine if script should be removed at the end of playbook run, default(false)
#   script_add_to_envpath - Directory path to add to environment PATH variable on zos endpoint, defualt(/bin)

# export INITVOL_SCRIPT_DEF="script_name=intivol.sh \
#                     script_args='-d={{zos_device_name}} -v={{zos_volser}}'"

# export CREATE_AND_MOUNT_ZFS_SCRIPT_DEF="script_name=create-and-mount-zfs.sh \
#  script_args='--mount_point={{mount_point}} \
#               --zfsdataset={{zfsdataset}} \
#               --megabytes={{megabytes}} \
#               --storageclas={{storageclas}} \
#               --dataclas={{dataclas}}
#               --sms_managed={{sms_managed}}'"
# Define environment variable for ansible call coopy this to solutions-enablement/scenarios/scripts/definitions/.env file

export SET_Z_AUTHORITY_SCRIPT_DEF="script_name=set-z-authority.sh
script_args=' \
 --userid={{ userid }} \
 --APF= {{ APF }} \
 --SHARELIB={{ SHARELIB }} \
 --PROGCTL={{ PROGCTL }} \
 --SYSLOG={{ SYSLOG }}
 '"

export GREETINGS_SCRIPT_DEF="script_name=greetings.sh \
 script_args='--firstname={{firstname}} \
   --lastname={{lastname}}'"

export CREATE_AND_MOUNT_ZFS_SCRIPT_DEF="script_name=create-and-mount-zfs.sh \
  script_args='--mount_point={{mount_point}} \
   --zfsdataset={{zfsdataset}} \
   --megabytes={{megabytes|default('')}} \
   --cylinders={{cylinders|default('')}} \
   --storageclas={{storageclas|default('scnosms')}} \
   --dataclas={{dataclas|default('')}} \
   --volser={{volser|default('')}} \
   --sms_managed={{sms_managed|default(false)}}'"

# --mount_point=/etc/zstack --zfsdataset=ZSTACK.ZFS --megabytes=20000 --cylinders=  --storageclas=scbase --dataclas=dceattr --volser= --sms_managed=true
# export CREATE_AND_MOUNT_ZFS_SCRIPT_DEF="script_name=create-and-mount-zfs.sh \
#   script_args='--mount_point={{ mount_point }} \
#    --zfsdataset={{ zfsdataset }} \
#    --megabytes={{ megabytes|default('') }} \
#    --cylinders={{ cylinders|default('') }} \
#    --storageclas={{ storageclas|default('scnosms') }} \
#    --dataclas={{ dataclas|default('') }} \
#    --volser={{ volser|default('')} }} \
#    --sms_managed={{ sms_managed|default(false) }}'"

# Define environment variable for ansible call coopy this to solutions-enablement/scenarios/scripts/definitions/.env file
export GREETINGS_SCRIPT_DEF="script_name=greetings.sh \
 script_args='--firstname={{ firstname }} \
   --lastname={{ lastname|default('') }}'"

# Define environment variable for ansible call
export INITVOL_SCRIPT_DEF="script_name=initvol.sh \
                    script_args='--devnum={{devnum}} --volser={{volser}}'"


export REMOVE_USER_SCRIPT_DEF="script_name=remove-user-and-grp.sh \
                    script_args='-u={{zpm_user}} -g={{zpm_group}}'"

export CREATE_USER_IN_GRP_SCRIPT_DEF="script_name=create-user-in-grp.sh  \
                    script_args='-u={{zpm_user}} -g={{zpm_group}} -idir={{zpm_install_dir}} -sdir={{zpm_state_dir}}'"

export CREATE_ZPM_DIRS_ON_ZFS_SCRIPT_DEF="script_name=create-zpm-dirs-on-zfs.sh  \
                    script_args='-u={{zpm_user}} -g={{zpm_group}} -idir={{zpm_install_dir}} -sdir={{zpm_state_dir}}'"

export CLEAN_ZPM_SCRIPT_DEF="script_name=cleanzpm.sh \
                    script_args='-idir={{zpm_install_dir}} -sdir={{zpm_state_dir}}'"

export ZPMENV_SCRIPT_DEF="script_name=zpmenv.sh \
                    script_args='-idir={{zpm_install_dir}} -sdir={{zpm_state_dir}}'"




